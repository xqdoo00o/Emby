define(["./../common/inputmanager.js"],function(_inputmanager){_inputmanager=babelHelpers.interopRequireDefault(_inputmanager);var _GAMEPAD_A_BUTTON_INDEX=0,_GAMEPAD_B_BUTTON_INDEX=1,_GAMEPAD_DPAD_UP_BUTTON_INDEX=12,_GAMEPAD_DPAD_DOWN_BUTTON_INDEX=13,_GAMEPAD_DPAD_LEFT_BUTTON_INDEX=14,_GAMEPAD_DPAD_RIGHT_BUTTON_INDEX=15,_THUMB_STICK_THRESHOLD=.75,_leftThumbstickUpPressed=!1,_leftThumbstickDownPressed=!1,_leftThumbstickLeftPressed=!1,_leftThumbstickRightPressed=!1,_dPadUpPressed=!1,_dPadDownPressed=!1,_dPadLeftPressed=!1,_dPadRightPressed=!1,_gamepadAPressed=!1,_gamepadBPressed=!1,_ButtonPressedState={getgamepadA:function(){return _gamepadAPressed},setgamepadA:function(newPressedState){raiseKeyEvent(_gamepadAPressed,newPressedState,"GamepadA",0,!1,!0),_gamepadAPressed=newPressedState},getgamepadB:function(){return _gamepadBPressed},setgamepadB:function(newPressedState){raiseKeyEvent(_gamepadBPressed,newPressedState,"GamepadB",27),_gamepadBPressed=newPressedState},getleftThumbstickUp:function(){return _leftThumbstickUpPressed},setleftThumbstickUp:function(newPressedState){raiseKeyEvent(_leftThumbstickUpPressed,newPressedState,"GamepadLeftThumbStickUp",38,!0),_leftThumbstickUpPressed=newPressedState},getleftThumbstickDown:function(){return _leftThumbstickDownPressed},setleftThumbstickDown:function(newPressedState){raiseKeyEvent(_leftThumbstickDownPressed,newPressedState,"GamepadLeftThumbStickDown",40,!0),_leftThumbstickDownPressed=newPressedState},getleftThumbstickLeft:function(){return _leftThumbstickLeftPressed},setleftThumbstickLeft:function(newPressedState){raiseKeyEvent(_leftThumbstickLeftPressed,newPressedState,"GamepadLeftThumbStickLeft",37,!0),_leftThumbstickLeftPressed=newPressedState},getleftThumbstickRight:function(){return _leftThumbstickRightPressed},setleftThumbstickRight:function(newPressedState){raiseKeyEvent(_leftThumbstickRightPressed,newPressedState,"GamepadLeftThumbStickRight",39,!0),_leftThumbstickRightPressed=newPressedState},getdPadUp:function(){return _dPadUpPressed},setdPadUp:function(newPressedState){raiseKeyEvent(_dPadUpPressed,newPressedState,"GamepadDPadUp",38,!0),_dPadUpPressed=newPressedState},getdPadDown:function(){return _dPadDownPressed},setdPadDown:function(newPressedState){raiseKeyEvent(_dPadDownPressed,newPressedState,"GamepadDPadDown",40,!0),_dPadDownPressed=newPressedState},getdPadLeft:function(){return _dPadLeftPressed},setdPadLeft:function(newPressedState){raiseKeyEvent(_dPadLeftPressed,newPressedState,"GamepadDPadLeft",37,!0),_dPadLeftPressed=newPressedState},getdPadRight:function(){return _dPadRightPressed},setdPadRight:function(newPressedState){raiseKeyEvent(_dPadRightPressed,newPressedState,"GamepadDPadRight",39,!0),_dPadRightPressed=newPressedState}},times={};function resetThrottle(key){times[key]=Date.now()}function allowInput(){var doc=document;return!("hidden"===doc.visibilityState||!doc.hasFocus())}function raiseEvent(name,key,keyCode){var event;allowInput()&&((event=document.createEvent("Event")).initEvent(name,!0,!0),event.key=key,event.keyCode=keyCode,(document.activeElement||document.body).dispatchEvent(event))}function raiseKeyEvent(oldPressedState,newPressedState,key,keyCode,enableRepeatKeyDown,clickonKeyUp){var fire,elem;!0===newPressedState?((fire=!1)===oldPressedState?(fire=!0,resetThrottle(key)):enableRepeatKeyDown&&(fire=function(key){var time=times[key]||0;return 200<=Date.now()-time}(key)),fire&&keyCode&&raiseEvent("keydown",key,keyCode)):!1===newPressedState&&!0===oldPressedState&&(resetThrottle(key),keyCode&&raiseEvent("keyup",key,keyCode),clickonKeyUp&&(elem=document.activeElement||window,allowInput()&&_inputmanager.default.trigger("select",{sourceElement:elem})))}var isLooping;function runInputLoop(){for(var buttonPressedState=_ButtonPressedState,hasGamepad=!1,gamepads=function(){try{return navigator.getGamepads()||[]}catch(err){return console.log("Error getting gamepads: "+err),[]}}(),i=0,length=gamepads.length;i<length;i++){var gamepad=gamepads[i];if(gamepad){hasGamepad=!0;var axes=gamepad.axes,leftStickX=axes[0],leftStickY=axes[1];_THUMB_STICK_THRESHOLD<leftStickX?buttonPressedState.setleftThumbstickRight(!0):leftStickX<-_THUMB_STICK_THRESHOLD?buttonPressedState.setleftThumbstickLeft(!0):leftStickY<-_THUMB_STICK_THRESHOLD?buttonPressedState.setleftThumbstickUp(!0):_THUMB_STICK_THRESHOLD<leftStickY?buttonPressedState.setleftThumbstickDown(!0):(buttonPressedState.setleftThumbstickLeft(!1),buttonPressedState.setleftThumbstickRight(!1),buttonPressedState.setleftThumbstickUp(!1),buttonPressedState.setleftThumbstickDown(!1));for(var buttons=gamepad.buttons,j=0,len=buttons.length;j<len;j++)if(buttons[j].pressed)switch(j){case _GAMEPAD_DPAD_UP_BUTTON_INDEX:_ButtonPressedState.setdPadUp(!0);break;case _GAMEPAD_DPAD_DOWN_BUTTON_INDEX:_ButtonPressedState.setdPadDown(!0);break;case _GAMEPAD_DPAD_LEFT_BUTTON_INDEX:_ButtonPressedState.setdPadLeft(!0);break;case _GAMEPAD_DPAD_RIGHT_BUTTON_INDEX:_ButtonPressedState.setdPadRight(!0);break;case _GAMEPAD_A_BUTTON_INDEX:_ButtonPressedState.setgamepadA(!0);break;case _GAMEPAD_B_BUTTON_INDEX:_ButtonPressedState.setgamepadB(!0)}else switch(j){case _GAMEPAD_DPAD_UP_BUTTON_INDEX:buttonPressedState.getdPadUp()&&buttonPressedState.setdPadUp(!1);break;case _GAMEPAD_DPAD_DOWN_BUTTON_INDEX:buttonPressedState.getdPadDown()&&buttonPressedState.setdPadDown(!1);break;case _GAMEPAD_DPAD_LEFT_BUTTON_INDEX:buttonPressedState.getdPadLeft()&&buttonPressedState.setdPadLeft(!1);break;case _GAMEPAD_DPAD_RIGHT_BUTTON_INDEX:buttonPressedState.getdPadRight()&&buttonPressedState.setdPadRight(!1);break;case _GAMEPAD_A_BUTTON_INDEX:buttonPressedState.getgamepadA()&&buttonPressedState.setgamepadA(!1);break;case _GAMEPAD_B_BUTTON_INDEX:buttonPressedState.getgamepadB()&&buttonPressedState.setgamepadB(!1)}}}hasGamepad?requestAnimationFrame(runInputLoop):(console.log("exiting gamepad input loop"),isLooping=!1)}navigator.getGamepads||(navigator.webkitGetGamepads?navigator.getGamepads=navigator.webkitGetGamepads:navigator.getGamepads=function(){return null}),window.addEventListener("gamepadconnected",function(e){var gamepadIndex=e.gamepad.index;console.log("gamepadconnected: "+gamepadIndex),isLooping||(isLooping=!0,runInputLoop())}),window.addEventListener("gamepaddisconnected",function(e){var gamepadIndex=e.gamepad.index;console.log("gamepaddisconnected: "+gamepadIndex)}),window.navigator&&"string"==typeof window.navigator.gamepadInputEmulation&&(window.navigator.gamepadInputEmulation="gamepad")});